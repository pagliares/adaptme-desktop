
//
//Automatically generated by XACDML
//

import simula.manager.*;
public class XP_Final
{
 public static void main (String args[])
 {
  System.out.println("\nGeracao de XP_Final atraves de Simulation Manager");
  SimulationManager man= new SimulationManager();

  QueueEntry qe;//queues 
  ResourceEntry re;//resource queues
  ExternalActiveEntry eae;//generator and detroy
  InternalActiveEntry iae;//activivity and router
  InterruptActiveEntry intae;//interrupts
  ObserverEntry oe;
  HistogramEntry he;

  //queues and observer queues
  

  qe = new QueueEntry();
  qe.SetId("Customer queue");//mapped by dead id
  qe.setObsid("Customer queue  observer 1");//observer
  man.AddQueue(qe);
  

//  qe = new QueueEntry();
//  qe.SetId("Development team queue");//mapped by dead id
//  qe.setObsid("Development team queue  observer 1");//observer
//  man.AddQueue(qe);
  

//  qe = new QueueEntry();
//  qe.SetId("User story output queue0");//mapped by dead id
//  qe.setObsid("User story output queue observer 1");//observer
//  man.AddQueue(qe);
  

//  qe = new QueueEntry();
//  qe.SetId("User story input queue");//mapped by dead id
//  qe.setObsid("User story input queue observer 1");//observer
//  man.AddQueue(qe);
  

//  qe = new QueueEntry();
//  qe.SetId("User story output queue2");//mapped by dead id
//  qe.setObsid("User story output queue observer 1");//observer
//  man.AddQueue(qe);
//  
//
//  qe = new QueueEntry();
//  qe.SetId("User story output queue4");//mapped by dead id
//  qe.setObsid("User story output queue observer 1");//observer
//  man.AddQueue(qe);
//  
//
//  qe = new QueueEntry();
//  qe.SetId("Classes output queue6");//mapped by dead id
//  qe.setObsid("Classes output queue observer 1");//observer
//  man.AddQueue(qe);
  
  //active states

   //externals (generates and destroys)
  
//  eae = new ExternalActiveEntry(true); //generate
//  eae.SetId("User story"); //mapped by generate id
//  eae.setQID("User story input queue"); // mapped by next dead
//  eae.setServiceDist( ActiveEntry.NEGEXP);// mapped by stat type
//  eae.setDistP1((int)5.0);// mapped by parm1
//  man.AddActiveState(eae);
  
//  eae = new ExternalActiveEntry(false); //destroy
//  eae.SetId( "destroy3"); //mapped by destroy id
//  eae.setQID( "User story output queue0"); // mapped by prev dead
//  man.AddActiveState(eae);
//  
//  eae = new ExternalActiveEntry(false); //destroy
//  eae.SetId( "destroy5"); //mapped by destroy id
//  eae.setQID( "User story output queue2"); // mapped by prev dead
//  man.AddActiveState(eae);
//  
//  eae = new ExternalActiveEntry(false); //destroy
//  eae.SetId( "destroy7"); //mapped by destroy id
//  eae.setQID( "Classes output queue6"); // mapped by prev dead
//  man.AddActiveState(eae);
  

   //internals (activities and routers)

  
//  iae = new InternalActiveEntry(true); //isn't router
//  iae.SetId( "Prioritize user stories"); //mapped by act id
//  iae.setServiceDist(ActiveEntry.NEGEXP);// mapped by stat type
//  iae.setDistP1((int)30.0);// mapped by parm1
//  iae.addCond("true");
//  iae.addToQueue("Customer queue");// mapped by next dead
//  iae.addFromQueue("Customer queue");// mapped by prev dead
//  iae.addToQueue("User story output queue0");// mapped by next dead
//  iae.addFromQueue("User story input queue");// mapped by prev dead
//  man.AddActiveState(iae);
  
//  iae = new InternalActiveEntry(true); //isn't router
//  iae.SetId( "Split macro user stories"); //mapped by act id
//  iae.setServiceDist(ActiveEntry.NEGEXP);// mapped by stat type
//  iae.setDistP1((int)30.0);// mapped by parm1
//  iae.addCond("true");
//  iae.addToQueue("Customer queue");// mapped by next dead
//  iae.addFromQueue("Customer queue");// mapped by prev dead
//  iae.addToQueue("User story output queue2");// mapped by next dead
//  iae.addFromQueue("User story input queue");// mapped by prev dead
//  man.AddActiveState(iae);
  
//  iae = new InternalActiveEntry(true); //isn't router
//  iae.SetId( "Estimate user stories"); //mapped by act id
//  iae.setServiceDist(ActiveEntry.NEGEXP);// mapped by stat type
//  iae.setDistP1((int)30.0);// mapped by parm1
//  iae.addCond("true");
//  iae.addToQueue("Development team queue");// mapped by next dead
//  iae.addFromQueue("Development team queue");// mapped by prev dead
//  iae.addToQueue("User story output queue4");// mapped by next dead
//  iae.addFromQueue("User story input queue");// mapped by prev dead
//  man.AddActiveState(iae);
  
//  iae = new InternalActiveEntry(true); //isn't router
//  iae.SetId( "Solo programming with test first"); //mapped by act id
//  iae.setServiceDist(ActiveEntry.NEGEXP);// mapped by stat type
//  iae.setDistP1((int)30.0);// mapped by parm1
//  iae.addCond("true");
//  iae.addToQueue("Development team queue");// mapped by next dead
//  iae.addFromQueue("Development team queue");// mapped by prev dead
//  iae.addToQueue("Classes output queue6");// mapped by next dead
//  iae.addFromQueue("User story output queue4");// mapped by prev dead
//  man.AddActiveState(iae);
  

  //observers

  
//  oe= new ObserverEntry(ObserverEntry.QUEUE,"Customer queue");//observer queue
//  oe.SetId("Customer queue  observer 1");
//  man.AddObserver(oe);
  
//  oe= new ObserverEntry(ObserverEntry.QUEUE,"Development team queue");//observer queue
//  oe.SetId("Development team queue  observer 1");
//  man.AddObserver(oe);
  
//  oe= new ObserverEntry(ObserverEntry.QUEUE,"User story output queue0");//observer queue
//  oe.SetId("User story output queue observer 1");
//  man.AddObserver(oe);
  
//  oe= new ObserverEntry(ObserverEntry.QUEUE,"User story input queue");//observer queue
//  oe.SetId("User story input queue observer 1");
//  man.AddObserver(oe);
  
//  oe= new ObserverEntry(ObserverEntry.QUEUE,"User story output queue2");//observer queue
//  oe.SetId("User story output queue observer 1");
//  man.AddObserver(oe);
//  
//  oe= new ObserverEntry(ObserverEntry.QUEUE,"User story output queue4");//observer queue
//  oe.SetId("User story output queue observer 1");
//  man.AddObserver(oe);
//  
//  oe= new ObserverEntry(ObserverEntry.QUEUE,"Classes output queue6");//observer queue
//  oe.SetId("Classes output queue observer 1");
//  man.AddObserver(oe);
  
//  oe= new ObserverEntry(ObserverEntry.ACTIVE,"User story");
//  oe.SetId("User story input queue generate activity observer 1");
//  man.AddObserver(oe);
//
//  eae = (ExternalActiveEntry)man.GetActiveState("User story");
//  eae.setObsid("User story input queue generate activity observer 1");
  

  //generate the model

  if (man.GenerateModel())
     System.out.println("\nModel successfuly generated!");
  else
  {
     System.out.println("\nThere was an errors during the model generation!");
     System.out.println("Exiting...");
     return;
  }

  //start the simulation

  System.out.println("Starting the simulation. Simulation wil run unitl time=500");

  man.ExecuteSimulation(500);

  while (!man.Finished())
  {
   try
   {
    Thread.sleep(1000);
   }
   catch(InterruptedException e) {break;}
  }

  System.out.println("Simulation Stopped!");

  //finally, output the results

  man.OutputSimulationResults ("XP_Final.out");

  
  System.out.println("\nThat's all folks!");
 }
}
