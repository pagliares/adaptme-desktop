//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.8-b130911.1802 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2016.01.19 at 07:02:24 PM BRST 
//


package xacdml.model.generated;

import javax.xml.bind.annotation.XmlRegistry;


/**
 * This object contains factory methods for each 
 * Java content interface and Java element interface 
 * generated in the generated package. 
 * <p>An ObjectFactory allows you to programatically 
 * construct new instances of the Java representation 
 * for XML content. The Java representation of XML 
 * content can consist of schema derived interfaces 
 * and classes representing the binding of schema 
 * type definitions, element declarations and model 
 * groups.  Factory methods for each of these are 
 * provided in this class.
 * 
 */
@XmlRegistry
public class ObjectFactory {


    /**
     * Create a new ObjectFactory that can be used to create new instances of schema derived classes for package: generated
     * 
     */
    public ObjectFactory() {
    }

    /**
     * Create an instance of {@link Next }
     * 
     */
    public Next createNext() {
        return new Next();
    }

    /**
     * Create an instance of {@link Instance }
     * 
     */
    public Instance createInstance() {
        return new Instance();
    }

    /**
     * Create an instance of {@link Acd }
     * 
     */
    public Acd createAcd() {
        return new Acd();
    }

    /**
     * Create an instance of {@link Simtime }
     * 
     */
    public Simtime createSimtime() {
        return new Simtime();
    }

    /**
     * Create an instance of {@link Class }
     * 
     */
    public Class createClass() {
        return new Class();
    }

    /**
     * Create an instance of {@link Generate }
     * 
     */
    public Generate createGenerate() {
        return new Generate();
    }

    /**
     * Create an instance of {@link Dead }
     * 
     */
    public Dead createDead() {
        return new Dead();
    }

    /**
     * Create an instance of {@link Act }
     * 
     */
    public Act createAct() {
        return new Act();
    }

    /**
     * Create an instance of {@link Router }
     * 
     */
    public Router createRouter() {
        return new Router();
    }

    /**
     * Create an instance of {@link Destroy }
     * 
     */
    public Destroy createDestroy() {
        return new Destroy();
    }

    /**
     * Create an instance of {@link Connect }
     * 
     */
    public Connect createConnect() {
        return new Connect();
    }

    /**
     * Create an instance of {@link Submodel }
     * 
     */
    public Submodel createSubmodel() {
        return new Submodel();
    }

    /**
     * Create an instance of {@link Prev }
     * 
     */
    public Prev createPrev() {
        return new Prev();
    }

    /**
     * Create an instance of {@link Graphic }
     * 
     */
    public Graphic createGraphic() {
        return new Graphic();
    }

    /**
     * Create an instance of {@link Type }
     * 
     */
    public Type createType() {
        return new Type();
    }

    /**
     * Create an instance of {@link QueueObserver }
     * 
     */
    public QueueObserver createQueueObserver() {
        return new QueueObserver();
    }

    /**
     * Create an instance of {@link EntityClass }
     * 
     */
    public EntityClass createEntityClass() {
        return new EntityClass();
    }

    /**
     * Create an instance of {@link Interface }
     * 
     */
    public Interface createInterface() {
        return new Interface();
    }

    /**
     * Create an instance of {@link In }
     * 
     */
    public In createIn() {
        return new In();
    }

    /**
     * Create an instance of {@link Out }
     * 
     */
    public Out createOut() {
        return new Out();
    }

    /**
     * Create an instance of {@link Cond }
     * 
     */
    public Cond createCond() {
        return new Cond();
    }

    /**
     * Create an instance of {@link RESUME }
     * 
     */
    public RESUME createRESUME() {
        return new RESUME();
    }

    /**
     * Create an instance of {@link SubmodelOut }
     * 
     */
    public SubmodelOut createSubmodelOut() {
        return new SubmodelOut();
    }

    /**
     * Create an instance of {@link Stat }
     * 
     */
    public Stat createStat() {
        return new Stat();
    }

    /**
     * Create an instance of {@link Whennext }
     * 
     */
    public Whennext createWhennext() {
        return new Whennext();
    }

    /**
     * Create an instance of {@link ActObserver }
     * 
     */
    public ActObserver createActObserver() {
        return new ActObserver();
    }

    /**
     * Create an instance of {@link Default }
     * 
     */
    public Default createDefault() {
        return new Default();
    }

    /**
     * Create an instance of {@link Whenprev }
     * 
     */
    public Whenprev createWhenprev() {
        return new Whenprev();
    }

    /**
     * Create an instance of {@link Interrupting }
     * 
     */
    public Interrupting createInterrupting() {
        return new Interrupting();
    }

    /**
     * Create an instance of {@link Interrupted }
     * 
     */
    public Interrupted createInterrupted() {
        return new Interrupted();
    }

    /**
     * Create an instance of {@link SubmodelIn }
     * 
     */
    public SubmodelIn createSubmodelIn() {
        return new SubmodelIn();
    }

    /**
     * Create an instance of {@link RESTART }
     * 
     */
    public RESTART createRESTART() {
        return new RESTART();
    }

    /**
     * Create an instance of {@link Action }
     * 
     */
    public Action createAction() {
        return new Action();
    }

    /**
     * Create an instance of {@link Attribute }
     * 
     */
    public Attribute createAttribute() {
        return new Attribute();
    }

    /**
     * Create an instance of {@link Listcond }
     * 
     */
    public Listcond createListcond() {
        return new Listcond();
    }

}
